services:
  db:
    image: postgres:16
    container_name: cerbyonvault_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    container_name: cerbyonvault_django
    volumes:
      - ./backend/static:/app/staticfiles
      - media_data:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env

    environment:
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    container_name: cerbyonvault_react
    ports:
      - "5173:5173"
    env_file:
      - .env

  nginx:
    image: nginx:alpine
    container_name: cerbyonvault_nginx
    restart: always
    volumes:
      - ./certs:/etc/nginx/certs:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/static:/static:ro
      - media_data:/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
  
  redis:
    image: redis:latest
    container_name: cerbyonvault_redis
    restart: always
    ports:
      - "6379:6379"
  
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    command: celery -A cerbyonvault worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - backend
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    command: sh -c "sleep 15 && celery -A cerbyonvault beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    env_file:
      - .env
    depends_on:
      - redis
      - backend

volumes:
  postgres_data:
  media_data:
